make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.

# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jul 16 08:51:22 2022

# Variables

# makefile (from 'Makefile', line 133)
ZLIB_INCLUDE_DIR = $(BUN_DEPS_DIR)/zlib
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from 'Makefile', line 145)
_MIMALLOC_INPUT_PATH = CMakeFiles/mimalloc-obj.dir/src/static.c.o
# makefile (from 'Makefile', line 377)
CLANG_VERSION = $(shell $(CC) --version | awk '/version/ {for(i=1; i<=NF; i++){if($$i=="version"){split($$(i+1),v,".");print v[1]}}}')
# makefile (from 'Makefile', line 69)
BUN_DEPS_OUT_DIR = $(BUN_DEPS_DIR)
# environment
WSLENV = VSCODE_WSL_EXT_LOCATION/up
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 311)
RELEASE_FLAGS = 
# makefile (from 'Makefile', line 47)
WEBKIT_RELEASE_DIR = $(WEBKIT_DIR)/WebKitBuild/Release
# makefile (from 'Makefile', line 42)
BUN_BUILD_TAG = bun-v$(PACKAGE_JSON_VERSION)
# makefile (from 'Makefile', line 734)
MIMALLOC_OVERRIDE_FLAG = 
# makefile (from 'Makefile', line 5)
BUN_AUTO_UPDATER_REPO = Jarred-Sumner/bun-releases-for-updater
# makefile (from 'Makefile', line 48)
WEBKIT_DEBUG_DIR = $(WEBKIT_DIR)/WebKitBuild/Debug
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 43)
BUN_RELEASE_BIN = $(PACKAGE_DIR)/bun
# makefile (from 'Makefile', line 178)
MACOS_MIN_FLAG = 
# makefile (from 'Makefile', line 409)
TINYCC_CFLAGS = -DTCC_LIBTCC1=\"\0\"
# makefile (from 'Makefile', line 76)
LIBICONV_PATH = $(BREW_PREFIX_PATH)/opt/libiconv/lib/libiconv.a
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /home/hyro/workspace/xHyroM/Makefile/bun-dependencies
# makefile (from 'Makefile', line 1)
SHELL := /bin/bash 
# makefile (from 'Makefile', line 89)
BITCODE_OR_SECTIONS = -fdata-sections -ffunction-sections
# makefile (from 'Makefile', line 34)
PACKAGES_REALPATH = $(realpath packages)
# makefile (from 'Makefile', line 248)
MACOS_ICU_FILES = $(HOMEBREW_PREFIX)/opt/icu4c/lib/libicudata.a $(HOMEBREW_PREFIX)/opt/icu4c/lib/libicui18n.a $(HOMEBREW_PREFIX)/opt/icu4c/lib/libicuuc.a 
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# makefile (from 'Makefile', line 208)
MAC_INCLUDE_DIRS := -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/WebKit/WebKitBuild/Release/JavaScriptCore/PrivateHeaders -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/WebKit/WebKitBuild/Release/WTF/Headers -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/WebKit/WebKitBuild/Release/ICU/Headers -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/WebKit/WebKitBuild/Release/ -Isrc/bun.js/bindings/ -Isrc/bun.js/builtins/ -Isrc/bun.js/bindings/webcore -Isrc/bun.js/bindings/sqlite -Isrc/bun.js/builtins/cpp -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/WebKit/Source/bmalloc -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/WebKit/Source
# makefile (from 'Makefile', line 106)
BUN_DEPLOY_DIR = /tmp/bun-v$(PACKAGE_JSON_VERSION)/$(PACKAGE_NAME)
# makefile (from 'Makefile', line 229)
UWS_INCLUDE_DIR := -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/uws/uSockets/src -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/uws/src -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps
# environment
_ = /home/hyro/.vscode-server/bin/b06ae3b2d2dbfe28bca3134cc6be65935cdfea6a/node
# makefile (from 'Makefile', line 103)
CFLAGS = $(MACOS_MIN_FLAG) $(MARCH_NATIVE) $(BITCODE_OR_SECTIONS) $(OPTIMIZATION_LEVEL) -fno-exceptions -fvisibility=hidden -fvisibility-inlines-hidden
# makefile (from 'Makefile', line 140)
ENABLE_MIMALLOC = 1
# makefile (from 'Makefile', line 220)
LINUX_INCLUDE_DIRS := -I/home/hyro/webkit-build/include -Isrc/bun.js/builtins/ -Isrc/bun.js/bindings/ -Isrc/bun.js/bindings/webcore -Isrc/bun.js/bindings/sqlite -Isrc/bun.js/builtins/cpp -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/zlib
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# makefile (from 'Makefile', line 130)
JSC_LIB_DEBUG = $(DEFAULT_JSC_LIB_DEBUG)
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'Makefile', line 197)
OBJ_DIR := src/bun.js/bindings-obj
# makefile (from 'Makefile', line 136)
JSC_FILES := /home/hyro/webkit-build/lib/libJavaScriptCore.a /home/hyro/webkit-build/lib/libWTF.a  /home/hyro/webkit-build/lib/libbmalloc.a /home/hyro/webkit-build/lib/libLowLevelInterpreterLib.a
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'Makefile', line 205)
SQLITE_OBJ_FILES := 
# makefile (from 'Makefile', line 36)
DEBUG_PACKAGE_DIR = $(PACKAGES_REALPATH)/debug-$(PACKAGE_NAME)
# makefile (from 'Makefile', line 342)
PLATFORM_LINKER_FLAGS = $(BUN_CFLAGS) -fuse-ld=lld -Wl,-z,now -Wl,--as-needed -Wl,--gc-sections -Wl,-z,stack-size=12800000 -static-libstdc++ -static-libgcc -fno-omit-frame-pointer -Wl,--compress-debug-sections,zlib ${STATIC_MUSL_FLAG} -Wl,-Bsymbolic-functions -fno-semantic-interposition -flto -Wl,--allow-multiple-definition -rdynamic
# makefile (from 'Makefile', line 80)
CMAKE_FLAGS_WITHOUT_RELEASE = -DCMAKE_C_COMPILER=$(CC) -DCMAKE_CXX_COMPILER=$(CXX) -DCMAKE_OSX_DEPLOYMENT_TARGET=$(MIN_MACOS_VERSION) 
# makefile (from 'Makefile', line 52)
ZIG = $(shell which zig || echo -e "error: Missing zig. Please make sure zig is in PATH. Or set ZIG=/path/to-zig-executable")
# makefile (from 'Makefile', line 23)
DOCKER_BUILDARCH = amd64
# makefile (from 'Makefile', line 308)
JSC_BINDINGS = $(BINDINGS_OBJ) $(JSC_FILES)
# makefile (from 'Makefile', line 49)
WEBKIT_RELEASE_DIR_LTO = $(WEBKIT_DIR)/WebKitBuild/ReleaseLTO
# makefile (from 'Makefile', line 584)
USOCKETS_DIR = $(BUN_DEPS_DIR)/uws/uSockets/
# makefile (from 'Makefile', line 68)
BUN_DEPS_DIR = $(REPO_ROOT)/deps
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'Makefile', line 237)
SQLITE_OBJECT = $(realpath $(BUN_DEPS_OUT_DIR))/sqlite3.o
# environment
VSCODE_CWD = /mnt/c/Users/hyrob/AppData/Local/Programs/Microsoft VS Code
# makefile (from 'Makefile', line 109)
DEFAULT_USE_BMALLOC := 1
# makefile (from 'Makefile', line 236)
INCLUDE_DIRS := -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/uws/uSockets/src -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/uws/src -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/mimalloc/include -Isrc/napi -I/home/hyro/webkit-build/include -Isrc/bun.js/builtins/ -Isrc/bun.js/bindings/ -Isrc/bun.js/bindings/webcore -Isrc/bun.js/bindings/sqlite -Isrc/bun.js/builtins/cpp -I/home/hyro/workspace/xHyroM/Makefile/bun-dependencies/deps/zlib
# makefile (from 'Makefile', line 400)
BASE64_FLAGS = -march=x86-64-v3
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from 'Makefile', line 203)
OBJ_FILES := 
# environment
PATH = /home/hyro/.vscode-server/bin/b06ae3b2d2dbfe28bca3134cc6be65935cdfea6a/bin/remote-cli:/home/hyro/.cargo/bin:/home/hyro/.bun/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Python310/Scripts/:/mnt/c/Python310/:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Program Files/nodejs/:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/Cloudflare/Cloudflare WARP/:/mnt/c/Program Files/Go/bin:/mnt/c/Program Files/GitHub CLI/:/mnt/c/Users/hyrob/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/hyrob/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/hyrob/AppData/Roaming/npm:/mnt/c/Program Files/JetBrains/IntelliJ IDEA Community Edition 2022.1.1/bin:/mnt/c/Program Files/JetBrains/IntelliJ IDEA Community Edition 2022.1.1/plugins/maven/lib/maven3/bin:/mnt/c/Program Files/Git/usr/bin:/mnt/c/Users/hyrob/.deno/bin:/mnt/c/Users/hyrob/go/bin:/mnt/c/Users/hyrob/AppData/Local/Microsoft/WindowsApps:/snap/bin:/home/hyro/zig-linux-x86_64-0.10.0-dev.2859+0101a5f75
# makefile (from 'Makefile', line 3)
OS_NAME := linux
# makefile (from 'Makefile', line 1230)
EMIT_LLVM_FOR_RELEASE = -emit-llvm -flto="full"
# makefile (from 'Makefile', line 155)
DEFAULT_LINKER_FLAGS = -pthread -ldl 
# makefile (from 'Makefile', line 583)
UWS_LDFLAGS = -I$(BUN_DEPS_DIR)/boringssl/include -I$(ZLIB_INCLUDE_DIR)
# makefile (from 'Makefile', line 22)
ARCH_NAME = x64
# makefile (from 'Makefile', line 1231)
EMIT_LLVM_FOR_DEBUG = 
# makefile (from 'Makefile', line 26)
MARCH_NATIVE = -march=native -mtune=native
# environment
XDG_RUNTIME_DIR = /mnt/wslg/runtime-dir
# makefile (from 'Makefile', line 35)
PACKAGE_DIR = $(PACKAGES_REALPATH)/$(PACKAGE_NAME)
# makefile (from 'Makefile', line 198)
SRC_PATH := 
# makefile (from 'Makefile', line 24)
BREW_PREFIX_PATH = /usr/local
# makefile (from 'Makefile', line 66)
REPO_ROOT = $(shell pwd)
# makefile (from 'Makefile', line 99)
CLANG_INCLUDE_DIRS = $(LLVM_PREFIX)/include
# makefile (from 'Makefile', line 81)
CMAKE_FLAGS = $(CMAKE_FLAGS_WITHOUT_RELEASE) -DCMAKE_BUILD_TYPE=Release
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK_CLI = /mnt/wslg/runtime-dir/vscode-ipc-da52058a-2703-4c58-9a51-1da082221e06.sock
# makefile (from 'Makefile', line 359)
ARCHIVE_FILES_WITHOUT_LIBCRYPTO = $(BUN_DEPS_OUT_DIR)/picohttpparser.o -L$(BUN_DEPS_OUT_DIR) -llolhtml -lz -larchive -lssl -lbase64 -ltcc $(_MIMALLOC_LINK) $(BUN_DEPS_OUT_DIR)/libbacktrace.a
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'Makefile', line 177)
MACOSX_DEPLOYMENT_TARGET = $(MIN_MACOS_VERSION)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from 'Makefile', line 120)
DEFAULT_JSC_LIB = $(JSC_BASE_DIR)/lib
# makefile (from 'Makefile', line 78)
OPENSSL_LINUX_DIR = $(BUN_DEPS_DIR)/openssl/openssl-OpenSSL_1_1_1l
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'Makefile', line 791)
BUN_DEPLOY_ZIP = /tmp/bun-$(PACKAGE_JSON_VERSION)/bun-$(TRIPLET).zip
# makefile (from 'Makefile', line 91)
LIBTOOL = libtoolize
# makefile (from 'Makefile', line 719)
CLANG_FORMAT := 
# makefile (from 'Makefile', line 339)
STATIC_MUSL_FLAG = 
# makefile (from 'Makefile', line 51)
NPM_CLIENT = $(shell which bun || which npm)
# makefile (from 'Makefile', line 581)
UWS_CC_FLAGS = -pthread  -DLIBUS_USE_OPENSSL=1 -DUWS_HTTPRESPONSE_NO_WRITEMARK=1  -DLIBUS_USE_BORINGSSL=1 -DWITH_BORINGSSL=1 -Wpedantic -Wall -Wextra -Wsign-conversion -Wconversion $(UWS_INCLUDE) -DUWS_WITH_PROXY
# makefile (from 'Makefile', line 134)
ZLIB_LIB_DIR = $(BUN_DEPS_DIR)/zlib
# environment
PWD = /home/hyro/workspace/xHyroM/Makefile/bun-dependencies
# makefile (from 'Makefile', line 393)
ZIG_FORK_SCRIPT = 404
# default
.LOADED := 
# makefile (from 'Makefile', line 252)
MACOS_ICU_INCLUDE = $(HOMEBREW_PREFIX)/opt/icu4c/include
# makefile (from 'Makefile', line 271)
BORINGSSL_PACKAGE = --pkg-begin boringssl $(BUN_DEPS_DIR)/boringssl.zig --pkg-end
# environment
WSL_INTEROP = /run/WSL/14574_interop
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# makefile (from 'Makefile', line 132)
JSC_INCLUDE_DIR = $(JSC_BASE_DIR)/include
# makefile (from 'Makefile', line 40)
BUILD_ID = $(shell cat ./build-id)
# makefile (from 'Makefile', line 112)
USE_BMALLOC = DEFAULT_USE_BMALLOC
# makefile (from 'Makefile', line 154)
_MIMALLOC_LINK = $(BUN_DEPS_OUT_DIR)/$(MIMALLOC_FILE)
# makefile (from 'Makefile', line 1232)
EMIT_LLVM = $(EMIT_LLVM_FOR_RELEASE)
# makefile (from 'Makefile', line 102)
OPTIMIZATION_LEVEL = -O3 $(MARCH_NATIVE)
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/hyro
# makefile (from 'Makefile', line 306)
SHARED_LIB_EXTENSION = .so
# makefile (from 'Makefile', line 303)
SYMBOLS = -Wl,--dynamic-list $(realpath src/symbols.dyn)
# makefile (from 'Makefile', line 64)
SED = $(shell which gsed || which sed)
# makefile (from 'Makefile', line 46)
WEBKIT_DIR = $(realpath deps/WebKit)
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
LOGNAME = hyro
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from 'Makefile', line 261)
ICU_FLAGS =  $(LIB_ICU_PATH)/libicuuc.a $(LIB_ICU_PATH)/libicudata.a $(LIB_ICU_PATH)/libicui18n.a
# makefile (from 'Makefile', line 372)
BUN_LLD_FLAGS = $(BUN_LLD_FLAGS_WITHOUT_JSC)  $(JSC_FILES) $(BINDINGS_OBJ)
# makefile (from 'Makefile', line 843)
TINYCC_DIR = $(realpath $(BUN_DEPS_DIR)/tinycc)
# makefile (from 'Makefile', line 38)
DEBUG_BIN = $(DEBUG_PACKAGE_DIR)/
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
MAKELEVEL := 0
# makefile (from 'Makefile', line 146)
_MIMALLOC_DEBUG_FILE = libmimalloc-debug.a
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# makefile (from 'Makefile', line 201)
SRC_SQLITE_FILES := $(subst ,, )
# makefile (from 'Makefile', line 1434)
PACKAGE_MAP = --pkg-begin thread_pool $(BUN_DIR)/src/thread_pool.zig --pkg-begin io $(BUN_DIR)/src/io/io_$(OS_NAME).zig --pkg-end --pkg-begin http $(BUN_DIR)/src/http_client_async.zig --pkg-begin strings $(BUN_DIR)/src/string_immutable.zig --pkg-end --pkg-begin picohttp $(BUN_DIR)/src/deps/picohttp.zig --pkg-end --pkg-begin io $(BUN_DIR)/src/io/io_darwin.zig --pkg-end --pkg-begin boringssl $(BUN_DIR)/src/boringssl.zig --pkg-end --pkg-begin thread_pool $(BUN_DIR)/src/thread_pool.zig --pkg-begin io $(BUN_DIR)/src/io/io_darwin.zig --pkg-end --pkg-begin http $(BUN_DIR)/src/http_client_async.zig --pkg-begin strings $(BUN_DIR)/src/string_immutable.zig --pkg-end --pkg-begin picohttp $(BUN_DIR)/src/deps/picohttp.zig --pkg-end --pkg-begin io $(BUN_DIR)/src/io/io_darwin.zig --pkg-end --pkg-begin boringssl $(BUN_DIR)/src/boringssl.zig --pkg-end --pkg-begin thread_pool $(BUN_DIR)/src/thread_pool.zig --pkg-end --pkg-end --pkg-end --pkg-end --pkg-end --pkg-begin picohttp $(BUN_DIR)/src/deps/picohttp.zig --pkg-end --pkg-begin io $(BUN_DIR)/src/io/io_darwin.zig --pkg-end --pkg-begin strings $(BUN_DIR)/src/string_immutable.zig --pkg-end --pkg-begin clap $(BUN_DIR)/src/deps/zig-clap/clap.zig --pkg-end --pkg-begin http $(BUN_DIR)/src/http_client_async.zig --pkg-begin strings $(BUN_DIR)/src/string_immutable.zig --pkg-end --pkg-begin picohttp $(BUN_DIR)/src/deps/picohttp.zig --pkg-end --pkg-begin io $(BUN_DIR)/src/io/io_darwin.zig --pkg-end --pkg-begin boringssl $(BUN_DIR)/src/boringssl.zig --pkg-end --pkg-begin thread_pool $(BUN_DIR)/src/thread_pool.zig --pkg-begin io $(BUN_DIR)/src/io/io_darwin.zig --pkg-end --pkg-begin http $(BUN_DIR)/src/http_client_async.zig --pkg-begin strings $(BUN_DIR)/src/string_immutable.zig --pkg-end --pkg-begin picohttp $(BUN_DIR)/src/deps/picohttp.zig --pkg-end --pkg-begin io $(BUN_DIR)/src/io/io_darwin.zig --pkg-end --pkg-begin boringssl $(BUN_DIR)/src/boringssl.zig --pkg-end --pkg-begin thread_pool $(BUN_DIR)/src/thread_pool.zig --pkg-end --pkg-end --pkg-end --pkg-end --pkg-begin boringssl $(BUN_DIR)/src/boringssl.zig --pkg-end --pkg-begin javascript_core $(BUN_DIR)/src/jsc.zig --pkg-begin http $(BUN_DIR)/src/http_client_async.zig --pkg-end --pkg-begin strings $(BUN_DIR)/src/string_immutable.zig --pkg-end --pkg-begin picohttp $(BUN_DIR)/src/deps/picohttp.zig --pkg-end --pkg-end
# environment
SHLVL = 0
# makefile (from 'Makefile', line 129)
JSC_LIB = $(DEFAULT_JSC_LIB)
# makefile (from 'Makefile', line 168)
 
MIMALLOC_FILE = $(_MIMALLOC_FILE)
# makefile (from 'Makefile', line 39)
DEBUG_BUN = $(DEBUG_BIN)/bun-debug
# makefile (from 'Makefile', line 206)
BUILTINS_OBJ_FILES := 
# default
MAKE_VERSION := 4.2.1
# environment
USER = hyro
# makefile
.DEFAULT_GOAL := llvm-install
# makefile (from 'Makefile', line 100)
LLD_INCLUDE_DIRS = $(LLVM_PREFIX)/include
# makefile (from 'Makefile', line 363)
BUN_LLD_FLAGS_WITHOUT_JSC = $(ARCHIVE_FILES) $(LIBICONV_PATH) $(CLANG_FLAGS) $(DEFAULT_LINKER_FLAGS) $(PLATFORM_LINKER_FLAGS) $(SQLITE_OBJECT) ${ICU_FLAGS}
# makefile (from 'Makefile', line 70)
CPUS = $(shell nproc)
# environment
NAME = LAPTOP-J5PF3D19
# makefile (from 'Makefile', line 202)
SRC_BUILTINS_FILES := $(subst ,, )
# makefile (from 'Makefile', line 582)
UWS_CXX_FLAGS = $(UWS_CC_FLAGS) -std=$(CXX_VERSION) -fno-exceptions
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'Makefile', line 144)
_MIMALLOC_FILE = libmimalloc.o
# makefile (from 'Makefile', line 375)
BUN_LLD_FLAGS_DEBUG = $(BUN_LLD_FLAGS_WITHOUT_JSC) $(JSC_FILES_DEBUG) $(BINDINGS_OBJ)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/hyrob/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# default
MAKE_COMMAND := make
# makefile (from 'Makefile', line 114)
JSC_BASE_DIR = ${HOME}/webkit-build
# makefile (from 'Makefile', line 37)
RELEASE_BUN = $(PACKAGE_DIR)/bun
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile (from 'Makefile', line 169)
MIMALLOC_INPUT_PATH = $(_MIMALLOC_INPUT_PATH)
# makefile (from 'Makefile', line 137)
JSC_FILES_DEBUG := /home/hyro/webkit-build/lib/libJavaScriptCore.a /home/hyro/webkit-build/lib/libWTF.a  /home/hyro/webkit-build/lib/libbmalloc.a /home/hyro/webkit-build/lib/libLowLevelInterpreterLib.a
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 193)
HOMEBREW_PREFIX = $(BREW_PREFIX_PATH)
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'Makefile', line 273)
CLANG_FLAGS = $(INCLUDE_DIRS) -std=$(CXX_VERSION) -DSTATICALLY_LINKED_WITH_JavaScriptCore=1 -DSTATICALLY_LINKED_WITH_WTF=1 -DSTATICALLY_LINKED_WITH_BMALLOC=1 -DBUILDING_WITH_CMAKE=1 -DBUN_SINGLE_THREADED_PER_VM_ENTRY_SCOPE=1 -DNDEBUG=1 -DNOMINMAX -DIS_BUILD -DENABLE_INSPECTOR_ALTERNATE_DISPATCHERS=1 -DBUILDING_JSCONLY__ -DASSERT_ENABLED=0 -fvisibility=hidden -fvisibility-inlines-hidden
# automatic
+F = $(notdir $+)
# makefile (from 'Makefile', line 309)
JSC_BINDINGS_DEBUG = $(BINDINGS_OBJ) $(JSC_FILES_DEBUG)
# makefile (from 'Makefile', line 105)
BUN_TMP_DIR := /tmp/make-bun
# makefile (from 'Makefile', line 189)
STRIP = $(which llvm-strip || which llvm-strip-13 || echo "Missing strip")
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from 'Makefile', line 33)
PACKAGE_NAME = bun-$(TRIPLET)
# makefile (from 'Makefile', line 258)
LIB_ICU_PATH = $(BUN_DEPS_DIR)
# makefile (from 'Makefile', line 153)
JSC_BUILD_STEPS :=  jsc-build-linux
# makefile (from 'Makefile', line 29)
BUN_OR_NODE = $(shell which bun || which node)
# 'override' directive
.SHELLSTATUS := 1
# default
MAKEFILES := 
# makefile (from 'Makefile', line 73)
BUN_RELEASE_DIR = $(shell pwd)/../bun-release
# makefile (from 'Makefile', line 196)
SRC_DIR := src/bun.js/bindings
# automatic
<F = $(notdir $<)
# makefile (from 'Makefile', line 312)
DEBUG_FLAGS = 
# makefile (from 'Makefile', line 336)
ARCHIVE_FILES = $(ARCHIVE_FILES_WITHOUT_LIBCRYPTO) -lcrypto -lusockets $(BUN_DEPS_OUT_DIR)/libuwsockets.o
# makefile (from 'Makefile', line 792)
BUN_DEPLOY_DSYM = /tmp/bun-$(PACKAGE_JSON_VERSION)/bun-$(TRIPLET).dSYM.tar.gz
# makefile (from 'Makefile', line 180)
POSIX_PKG_MANAGER = sudo apt
# makefile (from 'Makefile', line 45)
DSYMUTIL = $(shell which dsymutil || which dsymutil-13)
# makefile (from 'Makefile', line 41)
PACKAGE_JSON_VERSION = 0.1.$(BUILD_ID)
# environment
LC_ALL = C
# makefile (from 'Makefile', line 147)
_MIMALLOC_OBJECT_FILE = 1
# makefile (from 'Makefile', line 31)
CXX_VERSION = c++2a
# environment
HOSTTYPE = x86_64
# makefile (from 'Makefile', line 25)
MIN_MACOS_VERSION = 10.14
# automatic
^F = $(notdir $^)
# makefile (from 'Makefile', line 204)
WEBCORE_OBJ_FILES := 
# makefile (from 'Makefile', line 44)
PRETTIER = $(shell which prettier || echo "./node_modules/.bin/prettier")
# makefile (from 'Makefile', line 199)
SRC_FILES := $(subst ,, )
# default
SUFFIXES := 
# makefile (from 'Makefile', line 207)
BINDINGS_OBJ := $(subst ,,   )
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from 'Makefile', line 98)
LLVM_INCLUDE_DIRS = $(LLVM_PREFIX)/include
# makefile (from 'Makefile', line 67)
BUN_DIR = $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))
# makefile (from 'Makefile', line 585)
USOCKETS_SRC_DIR = $(BUN_DEPS_DIR)/uws/uSockets/src/
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (from 'Makefile', line 32)
TRIPLET = $(OS_NAME)-$(ARCH_NAME)
# makefile (from 'Makefile', line 121)
DEFAULT_JSC_LIB_DEBUG = $(DEFAULT_JSC_LIB)
# default
.RECIPEPREFIX := 
# makefile (from 'Makefile', line 4)
ARCH_NAME_RAW := x86_64
# makefile (from 'Makefile', line 75)
OPENSSL_VERSION = OpenSSL_1_1_1l
# makefile (from 'Makefile', line 200)
SRC_WEBCORE_FILES := $(subst ,, )
# makefile (from 'Makefile', line 90)
EMBED_OR_EMIT_BITCODE = 
# makefile (from 'Makefile', line 104)
BUN_CFLAGS = $(MACOS_MIN_FLAG) $(MARCH_NATIVE) $(EMBED_OR_EMIT_BITCODE) $(OPTIMIZATION_LEVEL) -fno-exceptions -fvisibility=hidden -fvisibility-inlines-hidden
# environment
LANG = C
# environment
TERM = xterm-256color
# makefile (from 'Makefile', line 373)
BUN_LLD_FLAGS_FAST = $(BUN_LLD_FLAGS_WITHOUT_JSC)  $(JSC_FILES_DEBUG) $(BINDINGS_OBJ)
# environment
WSL_DISTRO_NAME = Ubuntu
# variable set hash-table stats:
# Load=203/1024=20%, Rehash=0, Collisions=48/443=11%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 238333): 12 files, no impossibilities.
# src/bun.js/builtins: could not be stat'd.
# src/bun.js/bindings/sqlite: could not be stat'd.
# src/bun.js/bindings/webcore: could not be stat'd.
# src/bun.js/bindings: could not be stat'd.

# 12 files, no impossibilities in 5 directories.

# Implicit Rules

src/bun.js/bindings-obj/%.o: src/bun.js/bindings/%.cpp
#  recipe to execute (from 'Makefile', line 1237):
	$(CXX) $(CLANG_FLAGS) $(UWS_INCLUDE) \
		$(MACOS_MIN_FLAG) \
		$(OPTIMIZATION_LEVEL) \
		-fno-exceptions \
		-fno-rtti \
		-ferror-limit=1000 \
		$(EMIT_LLVM) \
		-g3 -c -o $@ $<

src/bun.js/bindings-obj/%.o: src/bun.js/bindings/webcore/%.cpp
#  recipe to execute (from 'Makefile', line 1247):
	$(CXX) $(CLANG_FLAGS) \
		$(MACOS_MIN_FLAG) \
		$(OPTIMIZATION_LEVEL) \
		-fno-exceptions \
		-fno-rtti \
		-ferror-limit=1000 \
		$(EMIT_LLVM) \
		-g3 -c -o $@ $<

src/bun.js/bindings-obj/%.o: src/bun.js/bindings/sqlite/%.cpp
#  recipe to execute (from 'Makefile', line 1257):
	$(CXX) $(CLANG_FLAGS) \
		$(MACOS_MIN_FLAG) \
		$(OPTIMIZATION_LEVEL) \
		-fno-exceptions \
		-fno-rtti \
		-ferror-limit=1000 \
		$(EMIT_LLVM) \
		-g3 -c -o $@ $<

src/bun.js/bindings-obj/%.o: src/bun.js/builtins/%.cpp
#  recipe to execute (from 'Makefile', line 1267):
	$(CXX) $(CLANG_FLAGS) \
		$(MACOS_MIN_FLAG) \
		$(OPTIMIZATION_LEVEL) \
		-fno-exceptions \
		-fno-rtti \
		-ferror-limit=1000 \
		$(EMIT_LLVM) \
		-g3 -c -o $@ $<

# 4 implicit rules, 0 (0.0%) terminal.

# Files

copy-test-node-modules:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 881):
	rm -rf test/snippets/package-json-exports/node_modules || echo "";
	cp -r test/snippets/package-json-exports/_node_modules_copy test/snippets/package-json-exports/node_modules || echo "";

dev-build-obj-wasm:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 534):
	$(ZIG) build bun-wasm -Dtarget=wasm32-freestanding --prominent-compile-errors

prepare-release: tag release-create
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

release-bin-without-push: test-all release-bin-check generate-release-bin-as-zip
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

libbacktrace:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 464):
	cd $(BUN_DEPS_DIR)/libbacktrace && \
	CFLAGS="$(CFLAGS)" CC=$(CC) ./configure --disable-shared --enable-static  --with-pic && \
	make -j$(CPUS) && \
	cp ./.libs/libbacktrace.a $(BUN_DEPS_OUT_DIR)/libbacktrace.a

sha:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 660):
	$(ZIG) build -Drelease-fast sha-bench-obj
	$(CXX) $(PACKAGE_DIR)/sha.o -g $(OPTIMIZATION_LEVEL) -o ./misctools/sha $(DEFAULT_LINKER_FLAGS) -lc $(ARCHIVE_FILES)
	rm -rf $(PACKAGE_DIR)/sha.o	

jsc-build-mac-compile:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 984):
	mkdir -p $(WEBKIT_RELEASE_DIR) $(WEBKIT_DIR);
	cd $(WEBKIT_RELEASE_DIR) && \
		ICU_INCLUDE_DIRS="$(HOMEBREW_PREFIX)opt/icu4c/include" \
		cmake \
			-DPORT="JSCOnly" \
			-DENABLE_STATIC_JSC=ON \
			-DENABLE_SINGLE_THREADED_VM_ENTRY_SCOPE=ON \
			-DCMAKE_BUILD_TYPE=relwithdebuginfo \
			-DUSE_THIN_ARCHIVES=OFF \
			-DENABLE_FTL_JIT=ON \
			-G Ninja \
			$(CMAKE_FLAGS_WITHOUT_RELEASE) \
			-DPTHREAD_JIT_PERMISSIONS_API=1 \
			-DUSE_PTHREAD_JIT_PERMISSIONS_API=ON \
			-DENABLE_REMOTE_INSPECTOR=ON \
			$(WEBKIT_DIR) \
			$(WEBKIT_RELEASE_DIR) && \
	CFLAGS="$(CFLAGS) $(BITCODE_OR_SECTIONS) -ffat-lto-objects" CXXFLAGS="$(CXXFLAGS) $(BITCODE_OR_SECTIONS)  -ffat-lto-objects" \
		cmake --build $(WEBKIT_RELEASE_DIR) --config Release --target jsc

# Not a target:
>>:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

test-dev-bun-install: test-dev-bun-install-git-status
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 906):
	cd test/apps && JS_RUNTIME=$(DEBUG_BUN) NPM_CLIENT=$(DEBUG_BUN) bash ./bun-install.sh
	cd test/apps && BUN_BIN=$(DEBUG_BUN) bash ./bun-install-utf8.sh

jsc-build-mac-copy:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1082):
	cp $(WEBKIT_RELEASE_DIR)/lib/libJavaScriptCore.a $(BUN_DEPS_OUT_DIR)/libJavaScriptCore.a
	cp $(WEBKIT_RELEASE_DIR)/lib/libLowLevelInterpreterLib.a $(BUN_DEPS_OUT_DIR)/libLowLevelInterpreterLib.a
	cp $(WEBKIT_RELEASE_DIR)/lib/libWTF.a $(BUN_DEPS_OUT_DIR)/libWTF.a
	cp $(WEBKIT_RELEASE_DIR)/lib/libbmalloc.a $(BUN_DEPS_OUT_DIR)/libbmalloc.a

docker-login:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 499):
	docker login ghcr.io --username jarred@jarredsumner.com
 

wasm: api build-obj-wasm-small
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 563):
	@rm -rf packages/bun-wasm/*.{d.ts,js,wasm,cjs,mjs,tsbuildinfo}
	@cp packages/bun-freestanding-wasm32/bun-wasm.wasm packages/bun-wasm/bun.wasm
	@cp src/api/schema.d.ts packages/bun-wasm/schema.d.ts
	@cp src/api/schema.js packages/bun-wasm/schema.js
	@cd packages/bun-wasm && $(NPM_CLIENT) run tsc -- -p .
	@esbuild --sourcemap=external --external:fs --define:process.env.NODE_ENV='"production"' --outdir=packages/bun-wasm --target=esnext --bundle packages/bun-wasm/index.ts --format=esm --minify 2> /dev/null
	@mv packages/bun-wasm/index.js packages/bun-wasm/index.mjs
	@mv packages/bun-wasm/index.js.map packages/bun-wasm/index.mjs.map
	@esbuild --sourcemap=external --external:fs --define:process.env.NODE_ENV='"production"' --outdir=packages/bun-wasm --target=esnext --bundle packages/bun-wasm/index.ts --format=cjs --minify --platform=node 2> /dev/null
	@mv packages/bun-wasm/index.js packages/bun-wasm/index.cjs
	@mv packages/bun-wasm/index.js.map packages/bun-wasm/index.cjs.map
	@rm -rf packages/bun-wasm/*.tsbuildinfo
	@wasm-opt -O4 --enable-mutable-globals  packages/bun-wasm/bun.wasm -o /tmp/bun.wasm
	@mv /tmp/bun.wasm packages/bun-wasm/bun.wasm

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

dev: mkdir-dev dev-obj bun-link-lld-debug bun-codesign-debug
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

sign-macos-x64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 596):
	gon sign.macos-x64.json

copy-to-bun-release-dir-bin:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1430):
	cp -r $(PACKAGE_DIR)/bun $(BUN_RELEASE_DIR)/bun
	cp -r $(PACKAGE_DIR)/bun-profile $(BUN_RELEASE_DIR)/bun-profile

identifier-cache:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 742):
	$(ZIG) run src/js_lexer/identifier_data.zig

jsc-build-linux-compile-config:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1050):
	mkdir -p $(WEBKIT_RELEASE_DIR)
	cd $(WEBKIT_RELEASE_DIR) && \
		cmake \
			-DPORT="JSCOnly" \
			-DENABLE_STATIC_JSC=ON \
			-DCMAKE_BUILD_TYPE=relwithdebuginfo \
			-DUSE_THIN_ARCHIVES=OFF \
			-DENABLE_FTL_JIT=ON \
			-DENABLE_REMOTE_INSPECTOR=ON \
			-DJSEXPORT_PRIVATE=WTF_EXPORT_DECLARATION \
			-USE_VISIBILITY_ATTRIBUTE=1 \
			-DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
			-G Ninja \
			-DCMAKE_CXX_COMPILER=$(CXX) \
			-DCMAKE_C_COMPILER=$(CC) \
			$(WEBKIT_DIR) \
			$(WEBKIT_RELEASE_DIR)

clean-bindings:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1090):
	rm -rf $(OBJ_DIR)/*.o
	rm -rf $(OBJ_DIR)/webcore/*.o
	rm -rf $(BINDINGS_OBJ)

test-dev-no-hmr: copy-test-node-modules
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 927):
	-killall bun-debug -9;
	DISABLE_HMR="DISABLE_HMR" BUN_BIN=$(DEBUG_BUN) node test/scripts/browser.js

test-bun-install-git-status:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 903):
	cd test/apps && JS_RUNTIME=$(RELEASE_BUN) BUN_BIN=$(RELEASE_BUN) bash ./bun-install-lockfile-status.sh

vendor-without-check: api analytics node-fallbacks runtime_js fallback_decoder bun_error mimalloc picohttp zlib boringssl libarchive libbacktrace lolhtml usockets uws base64 tinycc
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

release-bin-push-bin:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 829):
	gh release upload $(BUN_BUILD_TAG) --clobber $(BUN_DEPLOY_ZIP)
	gh release upload $(BUN_BUILD_TAG) --clobber $(BUN_DEPLOY_ZIP) --repo $(BUN_AUTO_UPDATER_REPO)

sign-macos-aarch64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 599):
	gon sign.macos-aarch64.json

dev-wasm: dev-build-obj-wasm
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 537):
	emcc -sEXPORTED_FUNCTIONS="['_bun_free', '_cycleStart', '_cycleEnd', '_bun_malloc', '_scan', '_transform', '_init']" \
		-g -s ERROR_ON_UNDEFINED_SYMBOLS=0  -DNDEBUG  \
		$(BUN_DEPS_DIR)/libmimalloc.a.wasm  \
		packages/debug-bun-freestanding-wasm32/bun-wasm.o $(OPTIMIZATION_LEVEL) --no-entry --allow-undefined  -s ASSERTIONS=0  -s ALLOW_MEMORY_GROWTH=1 -s WASM_BIGINT=1  \
		-o packages/debug-bun-freestanding-wasm32/bun-wasm.wasm
	cp packages/debug-bun-freestanding-wasm32/bun-wasm.wasm src/api/demo/public/bun-wasm.wasm

bun: vendor identifier-cache build-obj bun-link-lld-release bun-codesign-release-local
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

init-submodules:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 528):
	git submodule update --init --recursive --progress --depth=1

release-create-auto-updater:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

node-fallbacks:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 630):
	@cd src/node-fallbacks; $(NPM_CLIENT) install; $(NPM_CLIENT) run --silent build

release-bin-check-version:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 816):
	test $(shell eval $(BUN_RELEASE_BIN) --version) = $(PACKAGE_JSON_VERSION)

jsc-build-linux-compile-build:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1071):
		mkdir -p $(WEBKIT_RELEASE_DIR)  && \
		cd $(WEBKIT_RELEASE_DIR)  && \
	CFLAGS="$(CFLAGS) -Wl,--whole-archive -ffat-lto-objects" CXXFLAGS="$(CXXFLAGS) -Wl,--whole-archive -ffat-lto-objects" \
		cmake --build $(WEBKIT_RELEASE_DIR) --config relwithdebuginfo --target jsc

api:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 623):
	$(NPM_CLIENT) install
	./node_modules/.bin/peechy --schema src/api/schema.peechy --esm src/api/schema.js --ts src/api/schema.d.ts --zig src/api/schema.zig
	$(ZIG) fmt src/api/schema.zig
	$(PRETTIER) --write src/api/schema.js
	$(PRETTIER) --write src/api/schema.d.ts

test-create-react:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 913):
	BUN_BIN=$(RELEASE_BUN) bash test/apps/bun-create-react.sh
	

bun-link-lld-release-no-lto:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1190):
	$(CXX) $(BUN_LLD_FLAGS_FAST) $(SYMBOLS) \
		$(BUN_RELEASE_BIN).o \
		-o $(BUN_RELEASE_BIN) \
		-W \
		$(OPTIMIZATION_LEVEL) $(RELEASE_FLAGS)
	rm -rf $(BUN_RELEASE_BIN).dSYM
	cp $(BUN_RELEASE_BIN) $(BUN_RELEASE_BIN)-profile

jsc-build-mac: jsc-force-fastjit jsc-build-mac-compile jsc-build-mac-copy
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

release-create:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 754):
	gh release create --title "bun v$(PACKAGE_JSON_VERSION)" "$(BUN_BUILD_TAG)"
	gh release create --repo=$(BUN_AUTO_UPDATER_REPO) --title "bun v$(PACKAGE_JSON_VERSION)" "$(BUN_BUILD_TAG)" -n "See https://github.com/Jarred-Sumner/bun/releases/tag/$(BUN_BUILD_TAG) for release notes. Using the install script or bun upgrade is the recommended way to install bun. Join bun's Discord to get access https://bun.sh/discord"

picohttp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1288):
	 $(CC) $(CFLAGS) $(OPTIMIZATION_LEVEL) -g -fPIC -c $(BUN_DEPS_DIR)/picohttpparser/picohttpparser.c -I$(BUN_DEPS_DIR) -o $(BUN_DEPS_OUT_DIR)/picohttpparser.o; cd ../../	

release-bin-push: release-bin-push-bin release-bin-push-dsym
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bun-link-lld-release-no-jsc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1169):
	$(CXX) $(BUN_LLD_FLAGS_WITHOUT_JSC) $(SYMBOLS) \
		-g \
		$(BUN_RELEASE_BIN).o \
		-W \
		-o $(BUN_RELEASE_BIN) -Wl,-undefined,dynamic_lookup -Wl,-why_load

llvm-install: echo "/home/hyro/linuxbrew/.linuxbrew/opt/llvm@13/bin" >>
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

jsc-bindings-mac:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

jsc-build: jsc-build-linux
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

release-bin-generate-copy-dsym:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

release-bin-codesign:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

sizegen:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1277):
	$(CXX) src/bun.js/headergen/sizegen.cpp -o $(BUN_TMP_DIR)/sizegen $(CLANG_FLAGS) -O1
	$(BUN_TMP_DIR)/sizegen > src/bun.js/bindings/sizes.zig

format:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 441):
	$(PRETTIER) --write test/bun.js/*.js
	$(PRETTIER) --write test/bun.js/solid-dom-fixtures/**/*.js

jsc-force-fastjit:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 979):
	$(SED) -i "s/USE(PTHREAD_JIT_PERMISSIONS_API)/CPU(ARM64)/g" $(WEBKIT_DIR)/Source/JavaScriptCore/jit/ExecutableAllocator.h
	$(SED) -i "s/USE(PTHREAD_JIT_PERMISSIONS_API)/CPU(ARM64)/g" $(WEBKIT_DIR)/Source/JavaScriptCore/assembler/FastJITPermissions.h
	$(SED) -i "s/USE(PTHREAD_JIT_PERMISSIONS_API)/CPU(ARM64)/g" $(WEBKIT_DIR)/Source/JavaScriptCore/jit/ExecutableAllocator.cpp

bump:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 738):
	expr 0.1.0 + 1 > build-id

 
release-bin-generate-copy:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 808):
	rm -rf /tmp/bun-$(PACKAGE_JSON_VERSION)/bun-$(TRIPLET) $(BUN_DEPLOY_ZIP)
	mkdir -p /tmp/bun-$(PACKAGE_JSON_VERSION)/bun-$(TRIPLET)
	cp $(BUN_RELEASE_BIN) /tmp/bun-$(PACKAGE_JSON_VERSION)/bun-$(TRIPLET)/bun

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-16 08:50:42.660581
#  File has been updated.
#  Successfully updated.

jsc-bindings: jsc-bindings-headers jsc-bindings-mac
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

test-bun-run:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 896):
	cd test/apps && BUN_BIN=$(RELEASE_BUN) bash ./bun-run-check.sh

mimalloc-wasm:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1150):
	cd $(BUN_DEPS_DIR)/mimalloc; emcmake cmake -DMI_BUILD_SHARED=OFF -DMI_BUILD_STATIC=ON -DMI_BUILD_TESTS=OFF -DMI_BUILD_OBJECT=ON ${MIMALLOC_OVERRIDE_FLAG} -DMI_USE_CXX=ON .; emmake make; 
	cp $(BUN_DEPS_DIR)/mimalloc/$(MIMALLOC_INPUT_PATH) $(BUN_DEPS_OUT_DIR)/$(MIMALLOC_FILE).wasm

generate-release-bin-as-zip: release-bin-generate release-bin-codesign
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

boringssl-build-debug:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 451):
	cd $(BUN_DEPS_DIR)/boringssl && mkdir -p build && cd build && CFLAGS="$(CFLAGS)" cmake $(CMAKE_FLAGS_WITHOUT_RELEASE) -GNinja .. && ninja 

test: build-unit run-unit
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

fallback_decoder:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 633):
	@esbuild --target=esnext  --bundle src/fallback.ts --format=iife --platform=browser --minify > src/fallback.out.js

mkdir-dev:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 865):
	mkdir -p $(DEBUG_PACKAGE_DIR)/bin

test-dev-create-react:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 890):
	BUN_BIN=$(DEBUG_BUN) bash test/apps/bun-create-react.sh

generate-sink:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1224):
	bun src/bun.js/generate-jssink.js
	$(WEBKIT_DIR)/Source/JavaScriptCore/create_hash_table src/bun.js/bindings/JSSink.cpp > src/bun.js/bindings/JSSinkLookupTable.h
	$(SED) -i -e 's/#include "Lookup.h"//' src/bun.js/bindings/JSSinkLookupTable.h
	$(SED) -i -e 's/namespace JSC {//' src/bun.js/bindings/JSSinkLookupTable.h
	$(SED) -i -e 's/} \/\/ namespace JSC//' src/bun.js/bindings/JSSinkLookupTable.h

fmt-cpp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 615):
	cd src/bun.js/bindings && clang-format *.cpp *.h -i

bun-relink-copy:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1176):
	cp /tmp/bun-$(PACKAGE_JSON_VERSION).o $(BUN_RELEASE_BIN).o

generate-unit-tests:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1301):
	@bash ./misctools/generate-test-file.sh

bun-codesign-release-local-debug:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean-jsc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1088):
	cd src/bun.js/WebKit && rm -rf **/CMakeCache.txt **/CMakeFiles && rm -rf src/bun.js/WebKit/WebKitBuild

generate-install-script:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 651):
	@rm -f $(PACKAGES_REALPATH)/bun/install.js 	
	@esbuild --log-level=error --define:BUN_VERSION="\"$(PACKAGE_JSON_VERSION)\"" --define:process.env.NODE_ENV="\"production\"" --platform=node  --format=cjs $(PACKAGES_REALPATH)/bun/install.ts > $(PACKAGES_REALPATH)/bun/install.js

test-all: test-install test-with-hmr test-no-hmr test-create-next test-create-react test-bun-run test-bun-install test-bun-dev
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build-obj-wasm:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 545):
	$(ZIG) build bun-wasm -Drelease-fast -Dtarget=wasm32-freestanding --prominent-compile-errors
	emcc -sEXPORTED_FUNCTIONS="['_bun_free', '_cycleStart', '_cycleEnd', '_bun_malloc', '_scan', '_transform', '_init']" \
		-g -s ERROR_ON_UNDEFINED_SYMBOLS=0  -DNDEBUG  \
		$(BUN_DEPS_DIR)/libmimalloc.a.wasm  \
		packages/bun-freestanding-wasm32/bun-wasm.o $(OPTIMIZATION_LEVEL) --no-entry --allow-undefined  -s ASSERTIONS=0  -s ALLOW_MEMORY_GROWTH=1 -s WASM_BIGINT=1  \
		-o packages/bun-freestanding-wasm32/bun-wasm.wasm
	cp packages/bun-freestanding-wasm32/bun-wasm.wasm src/api/demo/public/bun-wasm.wasm

boringssl-build:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 448):
	cd $(BUN_DEPS_DIR)/boringssl && mkdir -p build && cd build && CFLAGS="$(CFLAGS)" cmake $(CMAKE_FLAGS) -GNinja .. && ninja 

release-safe: all-js jsc-bindings-mac build-obj-safe cls bun-link-lld-release bun-link-lld-release-dsym release-bin-entitlements
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bun_error:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 648):
	@cd packages/bun-error; $(NPM_CLIENT) install; $(NPM_CLIENT) run --silent build

kill-bun:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 884):
	-killall -9 bun bun-debug

httpbench-release:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 675):
	$(ZIG) build -Drelease-fast httpbench-obj
	$(CXX) $(PACKAGE_DIR)/httpbench.o -g $(OPTIMIZATION_LEVEL) -o ./misctools/http_bench $(DEFAULT_LINKER_FLAGS) -lc $(ARCHIVE_FILES)
	rm -rf $(PACKAGE_DIR)/httpbench.o
	

fetch-debug:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 665):
	$(ZIG) build fetch-obj
	$(CXX) $(DEBUG_PACKAGE_DIR)/fetch.o -g $(OPTIMIZATION_LEVEL) -o ./misctools/fetch $(DEFAULT_LINKER_FLAGS) -lc $(ARCHIVE_FILES)

test-dev-bun-run:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 931):
	cd test/apps && BUN_BIN=$(DEBUG_BUN) bash bun-run-check.sh

tag:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 745):
	git tag $(BUN_BUILD_TAG)
	git push --tags
	cd ../bun-releases-for-updater && echo $(BUN_BUILD_TAG) > bumper && git add bumper && git commit -m "Update latest release" && git tag $(BUN_BUILD_TAG) && git push

boringssl-copy:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 454):
	cp $(BUN_DEPS_DIR)/boringssl/build/ssl/libssl.a $(BUN_DEPS_OUT_DIR)/libssl.a
	cp $(BUN_DEPS_DIR)/boringssl/build/crypto/libcrypto.a $(BUN_DEPS_OUT_DIR)/libcrypto.a

test-dev: test-dev-with-hmr
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

integration-test-dev:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1420):
	USE_EXISTING_PROCESS=true TEST_SERVER_URL=http://localhost:3000 node test/scripts/browser.js

zig-fork: 404
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bun-relink-fast: bun-relink-copy bun-link-lld-release-no-lto
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

prepare-types:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 434):
	BUN_VERSION=$(PACKAGE_JSON_VERSION) $(BUN_RELEASE_BIN) types/bun/bundle.ts packages/bun-types
	echo "Generated types for $(PACKAGE_JSON_VERSION) in packages/bun-types"

bun-link-lld-debug-no-jsc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1161):
	$(CXX) $(BUN_LLD_FLAGS_WITHOUT_JSC) $(SYMBOLS) \
		-g \
		$(DEBUG_BIN)/bun-debug.o \
		-W \
		-o $(DEBUG_BIN)/bun-debug

bun-link-lld-release-dsym:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1211):
	mv $(BUN_RELEASE_BIN).o /tmp/bun-$(PACKAGE_JSON_VERSION).o

zlib:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 495):
	cd $(BUN_DEPS_DIR)/zlib; CFLAGS="$(CFLAGS)" cmake $(CMAKE_FLAGS) .; CFLAGS="$(CFLAGS)" make;
	cp $(BUN_DEPS_DIR)/zlib/libz.a $(BUN_DEPS_OUT_DIR)/libz.a

tgz-debug:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 488):
	$(ZIG) build tgz-obj
	$(CXX) $(DEBUG_PACKAGE_DIR)/tgz.o -g -o ./misctools/tgz $(DEFAULT_LINKER_FLAGS) -lc $(ARCHIVE_FILES)
	rm -rf $(DEBUG_PACKAGE_DIR)/tgz.o

bun-codesign-release-local:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

find-unused-zig-files:
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1298):
	@bash ./misctools/find-unused-zig.sh

fetch:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 655):
	$(ZIG) build -Drelease-fast fetch-obj
	$(CXX) $(PACKAGE_DIR)/fetch.o -g $(OPTIMIZATION_LEVEL) -o ./misctools/fetch $(DEFAULT_LINKER_FLAGS) -lc $(ARCHIVE_FILES)
	rm -rf $(PACKAGE_DIR)/fetch.o

test-create-next:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 893):
	BUN_BIN=$(RELEASE_BUN) bash test/apps/bun-create-next.sh

test-dev-bunjs:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
run-unit-tests:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bun-link-lld-release:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1181):
	$(CXX) $(BUN_LLD_FLAGS) $(SYMBOLS) \
		$(BUN_RELEASE_BIN).o \
		-o $(BUN_RELEASE_BIN) \
		-W \
		$(OPTIMIZATION_LEVEL) $(RELEASE_FLAGS)
	rm -rf $(BUN_RELEASE_BIN).dSYM
	cp $(BUN_RELEASE_BIN) $(BUN_RELEASE_BIN)-profile

runtime_js_dev:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 642):
	@NODE_ENV=development esbuild --define:process.env.NODE_ENV="development" --target=esnext  --bundle src/runtime/index.ts --format=iife --platform=browser --global-name=BUN_RUNTIME --external:/bun:* > src/runtime.out.js; cat src/runtime.footer.js >> src/runtime.out.js
	@NODE_ENV=development esbuild --define:process.env.NODE_ENV="development" --target=esnext  --bundle src/runtime/index-with-refresh.ts --format=iife --platform=browser --global-name=BUN_RUNTIME --external:/bun:* > src/runtime.out.refresh.js; cat src/runtime.footer.with-refresh.js >> src/runtime.out.refresh.js
	@NODE_ENV=development esbuild --define:process.env.NODE_ENV="development" --target=esnext  --bundle src/runtime/index-without-hmr.ts --format=iife --platform=node --global-name=BUN_RUNTIME --external:/bun:* > src/runtime.node.pre.out.js; cat src/runtime.node.pre.out.js src/runtime.footer.node.js > src/runtime.node.out.js
	@NODE_ENV=development esbuild --define:process.env.NODE_ENV="development" --target=esnext  --bundle src/runtime/index-without-hmr.ts --format=iife --platform=node --global-name=BUN_RUNTIME --external:/bun:* > src/runtime.bun.pre.out.js; cat src/runtime.bun.pre.out.js src/runtime.footer.bun.js > src/runtime.bun.out.js

unit-tests: generate-unit-tests run-unit-tests
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

release: all-js jsc-bindings-mac build-obj cls bun-link-lld-release bun-link-lld-release-dsym release-bin-entitlements
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

sqlite:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1284):
	$(CC) $(CFLAGS) $(INCLUDE_DIRS) -DSQLITE_ENABLE_COLUMN_METADATA= -DSQLITE_MAX_VARIABLE_NUMBER=250000 -DSQLITE_ENABLE_RTREE=1 -DSQLITE_ENABLE_FTS3=1 -DSQLITE_ENABLE_FTS3_PARENTHESIS=1 -DSQLITE_ENABLE_JSON1=1 $(SRC_DIR)/sqlite/sqlite3.c -c -o $(SQLITE_OBJECT)

mimalloc-debug:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1105):
	rm -rf $(BUN_DEPS_DIR)/mimalloc/CMakeCache* $(BUN_DEPS_DIR)/mimalloc/CMakeFiles
	cd $(BUN_DEPS_DIR)/mimalloc; make clean || echo ""; \
		CFLAGS="$(CFLAGS)" cmake $(CMAKE_FLAGS_WITHOUT_RELEASE) ${MIMALLOC_OVERRIDE_FLAG} \
			-DCMAKE_BUILD_TYPE=Debug \
			-DMI_DEBUG_FULL=1 \
			-DMI_SKIP_COLLECT_ON_EXIT=1 \
			-DMI_BUILD_SHARED=OFF \
			-DMI_BUILD_STATIC=ON \
			-DMI_BUILD_TESTS=OFF \
			-DMI_OSX_ZONE=OFF \
			-DMI_OSX_INTERPOSE=OFF \
			-DMI_BUILD_OBJECT=ON \
			-DMI_USE_CXX=ON \
			-DMI_OVERRIDE=OFF \
			-DCMAKE_C_FLAGS="$(CFLAGS)" \
			-DCMAKE_CXX_FLAGS="$(CFLAGS)" \
			. \
			&& make -j $(CPUS); 
	cp $(BUN_DEPS_DIR)/mimalloc/$(_MIMALLOC_DEBUG_FILE) $(BUN_DEPS_OUT_DIR)/$(MIMALLOC_FILE)

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

copy-install:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1423):
	cp src/cli/install.sh ../bun.sh/docs/install.html

test-dev-all: test-dev-with-hmr test-dev-no-hmr test-dev-create-next test-dev-create-react test-dev-bun-run test-dev-bun-install test-dev-bun-dev
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build-obj-safe:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 579):
	$(ZIG) build obj -Drelease-safe

tgz:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 483):
	$(ZIG) build tgz-obj -Drelease-fast
	$(CXX) $(PACKAGE_DIR)/tgz.o -g -o ./misctools/tgz $(DEFAULT_LINKER_FLAGS) -lc  $(ARCHIVE_FILES)
	rm -rf $(PACKAGE_DIR)/tgz.o

check-glibc-version-dependency:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 683):
	@objdump -T $(RELEASE_BUN) | ((grep -qe "GLIBC_2.3[0-9]") && { echo "Glibc 2.3X detected, this will break the binary"; exit 1; }) || true

extract-webkit-linux-binaries:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 380):
	wget -c https://github.com/Jarred-Sumner/WebKit/releases/download/jul4/bun-webkit-linux-amd64.tar.gz -O - | tar -xz && \
		make webkit-copy

runtime_js:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 636):
	@NODE_ENV=production esbuild --define:process.env.NODE_ENV="production" --target=esnext  --bundle src/runtime/index.ts --format=iife --platform=browser --global-name=BUN_RUNTIME --minify --external:/bun:* > src/runtime.out.js; cat src/runtime.footer.js >> src/runtime.out.js
	@NODE_ENV=production esbuild --define:process.env.NODE_ENV="production" --target=esnext  --bundle src/runtime/index-with-refresh.ts --format=iife --platform=browser --global-name=BUN_RUNTIME --minify --external:/bun:* > src/runtime.out.refresh.js; cat src/runtime.footer.with-refresh.js >> src/runtime.out.refresh.js
	@NODE_ENV=production esbuild --define:process.env.NODE_ENV="production" --target=esnext  --bundle src/runtime/index-without-hmr.ts --format=iife --platform=node --global-name=BUN_RUNTIME --minify --external:/bun:* > src/runtime.node.pre.out.js; cat src/runtime.node.pre.out.js src/runtime.footer.node.js > src/runtime.node.out.js
	@NODE_ENV=production esbuild --define:process.env.NODE_ENV="production" --target=esnext  --bundle src/runtime/index-without-hmr.ts --format=iife --platform=node --global-name=BUN_RUNTIME --minify --external:/bun:* > src/runtime.bun.pre.out.js; cat src/runtime.bun.pre.out.js src/runtime.footer.bun.js > src/runtime.bun.out.js

run-all-unit-tests:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1397):
	@rm -rf zig-out/bin/__main_test
	@mkdir -p zig-out/bin
	zig test src/main.zig \
	$(PACKAGE_MAP) \
	--main-pkg-path $(BUN_DIR) \
	--test-no-exec \
	-fPIC \
	-femit-bin=zig-out/bin/__main_test \
	-fcompiler-rt \
	-lc -lc++ \
	--cache-dir /tmp/zig-cache-bun-__main_test \
	-fallow-shlib-undefined \
	$(ARCHIVE_FILES) $(ICU_FLAGS) $(JSC_FILES) $(JSC_BINDINGS) && \
	zig-out/bin/__main_test $(ZIG)

docker-push-base:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 502):
	BUILDKIT=1 docker build -f Dockerfile.base --build-arg GITHUB_WORKSPACE=/build --platform=linux/$(DOCKER_BUILDARCH) --tag bun-base --target base .
	BUILDKIT=1 docker build -f Dockerfile.base --build-arg GITHUB_WORKSPACE=/build --platform=linux/$(DOCKER_BUILDARCH) --tag bun-base-with-zig-and-webkit --target base-with-zig-and-webkit .
	BUILDKIT=1 docker build -f Dockerfile.base --build-arg GITHUB_WORKSPACE=/build --platform=linux/$(DOCKER_BUILDARCH) --tag bun-base-with-args --target base-with-args .
	docker tag bun-base ghcr.io/jarred-sumner/bun-base:latest
	docker push ghcr.io/jarred-sumner/bun-base:latest
	docker tag bun-base-with-zig-and-webkit ghcr.io/jarred-sumner/bun-base-with-zig-and-webkit:latest
	docker push ghcr.io/jarred-sumner/bun-base-with-zig-and-webkit:latest
	docker tag bun-base-with-args ghcr.io/jarred-sumner/bun-base-with-args:latest
	docker push ghcr.io/jarred-sumner/bun-base-with-args:latest

analytics:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1291):
	./node_modules/.bin/peechy --schema src/analytics/schema.peechy --zig src/analytics/analytics_schema.zig
	$(ZIG) fmt src/analytics/analytics_schema.zig

# Not a target:
echo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

wasm-return1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1221):
	zig build-lib -OReleaseSmall test/bun.js/wasm-return-1-test.zig -femit-bin=test/bun.js/wasm-return-1-test.wasm -target wasm32-freestanding

test-dev-create-next:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 887):
	BUN_BIN=$(DEBUG_BUN) bash test/apps/bun-create-next.sh

uws:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 593):
	cd $(USOCKETS_DIR) && $(CXX) $(BITCODE_OR_SECTIONS) $(EMIT_LLVM_FOR_RELEASE) -fPIC -I$(BUN_DEPS_DIR)/uws/uSockets/src $(CLANG_FLAGS) $(CFLAGS) $(UWS_CXX_FLAGS) $(UWS_LDFLAGS) $(PLATFORM_LINKER_FLAGS) -c -I$(BUN_DEPS_DIR) $(BUN_DEPS_OUT_DIR)/libusockets.a $(BUN_DEPS_OUT_DIR)/libuwsockets.cpp -o $(BUN_DEPS_OUT_DIR)/libuwsockets.o

httpbench-debug:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 670):
	$(ZIG) build httpbench-obj
	$(CXX) $(DEBUG_PACKAGE_DIR)/httpbench.o -g -o ./misctools/http_bench $(DEFAULT_LINKER_FLAGS) -lc $(ARCHIVE_FILES)

dev-obj-linux:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 860):
	$(ZIG) build obj -Dtarget=x86_64-linux-gnu

mimalloc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1130):
	rm -rf $(BUN_DEPS_DIR)/mimalloc/CMakeCache* $(BUN_DEPS_DIR)/mimalloc/CMakeFiles
	cd $(BUN_DEPS_DIR)/mimalloc; \
		CFLAGS="$(CFLAGS)" cmake $(CMAKE_FLAGS) \
			-DMI_SKIP_COLLECT_ON_EXIT=1 \
			-DMI_BUILD_SHARED=OFF \
			-DMI_BUILD_STATIC=ON \
			-DMI_BUILD_TESTS=OFF \
			-DMI_OSX_ZONE=OFF \
			-DMI_OSX_INTERPOSE=OFF \
			-DMI_BUILD_OBJECT=ON \
			-DMI_USE_CXX=ON \
			-DMI_OVERRIDE=OFF \
			-DMI_OSX_ZONE=OFF \
			-DCMAKE_C_FLAGS="$(CFLAGS)" \
			 .\
			&& make -j $(CPUS); 
	cp $(BUN_DEPS_DIR)/mimalloc/$(MIMALLOC_INPUT_PATH) $(BUN_DEPS_OUT_DIR)/$(MIMALLOC_FILE)

test-dev-bun-install-git-status:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 910):
	cd test/apps && BUN_BIN=$(DEBUG_BUN) bash ./bun-install-lockfile-status.sh

clean: clean-bindings
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1095):
	rm $(BUN_DEPS_DIR)/*.a $(BUN_DEPS_DIR)/*.o
	(cd $(BUN_DEPS_DIR)/mimalloc && make clean) || echo "";
	(cd $(BUN_DEPS_DIR)/libarchive && make clean) || echo "";
	(cd $(BUN_DEPS_DIR)/boringssl && make clean) || echo "";
	(cd $(BUN_DEPS_DIR)/picohttp && make clean) || echo "";
	(cd $(BUN_DEPS_DIR)/zlib && make clean) || echo "";

compile-ffi-test:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 461):
	clang $(OPTIMIZATION_LEVEL) -shared -undefined dynamic_lookup -o /tmp/bun-ffi-test.dylib -fPIC ./test/bun.js/ffi-test.c

bun-codesign-debug:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

test-install:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 868):
	cd test/scripts && $(NPM_CLIENT) install

# Not a target:
"/home/hyro/linuxbrew/.linuxbrew/opt/llvm@13/bin":
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

test-bun-dev:
#  Implicit rule search has not been done.
 
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 871):
	BUN_BIN=$(RELEASE_BUN) bash test/apps/bun-dev.sh
	BUN_BIN=$(RELEASE_BUN) bash test/apps/bun-dev-index-html.sh
	

release-types:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 438):
	cd packages/bun-types && npm publish

usockets:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 588):
	cd $(USOCKETS_DIR) && $(CC) -fno-builtin-malloc -fno-builtin-free -fno-builtin-realloc $(EMIT_LLVM_FOR_RELEASE)  $(MACOS_MIN_FLAG) -fPIC $(CFLAGS) $(UWS_CC_FLAGS) -save-temps -I$(BUN_DEPS_DIR)/uws/uSockets/src $(UWS_LDFLAGS) -g $(DEFAULT_LINKER_FLAGS) $(PLATFORM_LINKER_FLAGS) $(OPTIMIZATION_LEVEL) -g -c $(wildcard $(USOCKETS_SRC_DIR)/*.c) $(wildcard $(USOCKETS_SRC_DIR)/**/*.c)
	cd $(USOCKETS_DIR) && $(CXX) -fno-builtin-malloc -fno-builtin-free -fno-builtin-realloc $(EMIT_LLVM_FOR_RELEASE) $(MACOS_MIN_FLAG)  -fPIC $(CXXFLAGS) $(UWS_CXX_FLAGS) -save-temps -I$(BUN_DEPS_DIR)/uws/uSockets/src $(UWS_LDFLAGS) -g $(DEFAULT_LINKER_FLAGS) $(PLATFORM_LINKER_FLAGS) $(OPTIMIZATION_LEVEL) -g -c $(wildcard $(USOCKETS_SRC_DIR)/*.cpp) $(wildcard $(USOCKETS_SRC_DIR)/**/*.cpp)
	cd $(USOCKETS_DIR) && $(AR) rcvs $(BUN_DEPS_OUT_DIR)/libusockets.a *.bc

run-unit:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1413):
	@zig-out/bin/$(testname) $(ZIG)
	
	

lolhtml:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 445):
	cd $(BUN_DEPS_DIR)/lol-html/ && cd $(BUN_DEPS_DIR)/lol-html/c-api && cargo build --release && cp target/release/liblolhtml.a $(BUN_DEPS_OUT_DIR)

devcontainer: clone-submodules mimalloc zlib libarchive boringssl picohttp identifier-cache node-fallbacks jsc-bindings-headers api analytics bun_error fallback_decoder jsc-bindings-mac dev runtime_js_dev libarchive libbacktrace lolhtml usockets uws base64 tinycc
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

base64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 403):
	cd $(BUN_DEPS_DIR)/base64 && \
	   $(CC) $(EMIT_LLVM_FOR_RELEASE) $(BUN_CFLAGS) $(OPTIMIZATION_LEVEL) $(BASE64_FLAGS) -g -fPIC -c *.c -I$(SRC_DIR)/base64  && \
	   $(CXX) $(EMIT_LLVM_FOR_RELEASE) $(CXXFLAGS) $(BUN_CFLAGS) $(BASE64_FLAGS) -c neonbase64.cc -g -fPIC  && \
	   $(AR) rcvs $(BUN_DEPS_OUT_DIR)/libbase64.a ./*.o

jsc-build-mac-compile-lto:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1005):
	mkdir -p $(WEBKIT_RELEASE_DIR_LTO) $(WEBKIT_DIR);
	cd $(WEBKIT_RELEASE_DIR_LTO) && \
		ICU_INCLUDE_DIRS="$(HOMEBREW_PREFIX)opt/icu4c/include" \
		cmake \
			-DPORT="JSCOnly" \
			-DENABLE_STATIC_JSC=ON \
			-DENABLE_SINGLE_THREADED_VM_ENTRY_SCOPE=ON \
			-DCMAKE_BUILD_TYPE=Release \
			-DUSE_THIN_ARCHIVES=OFF \
			-DCMAKE_C_FLAGS="-flto=full" \
			-DCMAKE_CXX_FLAGS="-flto=full" \
			-DENABLE_FTL_JIT=ON \
			-G Ninja \
			$(CMAKE_FLAGS_WITHOUT_RELEASE) \
			-DPTHREAD_JIT_PERMISSIONS_API=1 \
			-DUSE_PTHREAD_JIT_PERMISSIONS_API=ON \
			-DENABLE_REMOTE_INSPECTOR=ON \
			$(WEBKIT_DIR) \
			$(WEBKIT_RELEASE_DIR_LTO) && \
	CFLAGS="$(CFLAGS) -ffat-lto-objects" CXXFLAGS="$(CXXFLAGS) -ffat-lto-objects" \
		cmake --build $(WEBKIT_RELEASE_DIR_LTO) --config Release --target jsc

bun-link-lld-debug:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1154):
	$(CXX) $(BUN_LLD_FLAGS_DEBUG) $(DEBUG_FLAGS) $(SYMBOLS) \
		-g \
		$(DEBUG_BIN)/bun-debug.o \
		-W \
		-o $(DEBUG_BIN)/bun-debug

test-with-hmr: kill-bun copy-test-node-modules
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 916):
	BUN_BIN=$(RELEASE_BUN) node test/scripts/browser.js

release-bin: release-bin-without-push release-bin-push
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build-obj:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 531):
	$(ZIG) build obj -Drelease-fast

release-bin-generate: release-bin-generate-copy release-bin-generate-zip release-bin-generate-copy-dsym
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

generate-builtins:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 418):
	rm -f src/bun.js/bindings/*Builtin*.cpp src/bun.js/bindings/*Builtin*.h src/bun.js/bindings/*Builtin*.cpp
	rm -rf src/bun.js/builtins/cpp
	mkdir -p src/bun.js/builtins/cpp
	$(shell which python || which python2) $(realpath $(WEBKIT_DIR)/Source/JavaScriptCore/Scripts/generate-js-builtins.py) -i $(realpath src)/bun.js/builtins/js  -o $(realpath src)/bun.js/builtins/cpp --framework WebCore --force 
	$(shell which python || which python2) $(realpath $(WEBKIT_DIR)/Source/JavaScriptCore/Scripts/generate-js-builtins.py) -i $(realpath src)/bun.js/builtins/js  -o $(realpath src)/bun.js/builtins/cpp --framework WebCore --wrappers-only
	rm -rf /tmp/1.h src/bun.js/builtins/cpp/WebCoreJSBuiltinInternals.h.1
	echo -e '// clang-format off\nnamespace Zig { class GlobalObject; }' >> /tmp/1.h
	cat /tmp/1.h  src/bun.js/builtins/cpp/WebCoreJSBuiltinInternals.h > src/bun.js/builtins/cpp/WebCoreJSBuiltinInternals.h.1
	mv src/bun.js/builtins/cpp/WebCoreJSBuiltinInternals.h.1 src/bun.js/builtins/cpp/WebCoreJSBuiltinInternals.h
	$(SED) -i -e 's/class JSDOMGlobalObject/using JSDOMGlobalObject = Zig::GlobalObject/' src/bun.js/builtins/cpp/WebCoreJSBuiltinInternals.h
	# this is the one we actually build
	mv src/bun.js/builtins/cpp/*JSBuiltin*.cpp src/bun.js/builtins

tinycc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 412):
	cd $(TINYCC_DIR) && \
		sudo AR=$(AR) CC=$(CC) CFLAGS='$(CFLAGS) $(TINYCC_CFLAGS) $(MACOS_MIN_FLAG)' ./configure --enable-static --cc=$(CC) --ar=$(AR) --config-predefs=yes  && \
		make -j10 && \
		cp $(TINYCC_DIR)/*.a $(BUN_DEPS_OUT_DIR)
		

fmt: fmt-cpp fmt-zig
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

jsc: jsc-build jsc-copy-headers jsc-bindings
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

webkit-copy:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 384):
	cp bun-webkit/lib/* $(BUN_DEPS_OUT_DIR)

build-unit:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1380):
	@rm -rf zig-out/bin/$(testname)
	@mkdir -p zig-out/bin
	zig test  $(realpath $(testpath)) \
	$(testfilterflag) \
	$(PACKAGE_MAP) \
	--main-pkg-path $(BUN_DIR) \
	--test-no-exec \
	-fPIC \
	-femit-bin=zig-out/bin/$(testname) \
	-fcompiler-rt \
	-lc -lc++ \
	--cache-dir /tmp/zig-cache-bun-$(testname)-$(basename $(lastword $(testfilter))) \
	-fallow-shlib-undefined \
	 && \
	cp zig-out/bin/$(testname) $(testbinpath)

test-dev-bun-dev:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 875):
	BUN_BIN=$(DEBUG_BUN) bash test/apps/bun-dev.sh
	BUN_BIN=$(DEBUG_BUN) bash test/apps/bun-dev-index-html.sh

# Not a target:
404:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

require:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 516):
	@echo "Checking if the required utilities are available..."
	@if [ $(CLANG_VERSION) -lt "13" ]; then echo -e "ERROR: clang version >=13 required, found: $(CLANG_VERSION). Install with:\n\n    $(POSIX_PKG_MANAGER) install llvm@13"; exit 1; fi
	@cmake --version >/dev/null 2>&1 || (echo -e "ERROR: cmake is required."; exit 1)
	@esbuild --version >/dev/null 2>&1 || (echo -e "ERROR: esbuild is required."; exit 1)
	@npm --version >/dev/null 2>&1 || (echo -e "ERROR: npm is required."; exit 1)
	@go version >/dev/null 2>&1 || (echo -e "ERROR: go is required."; exit 1)
	@which aclocal > /dev/null || (echo -e  "ERROR: automake is required. Install with:\n\n    $(POSIX_PKG_MANAGER) install automake"; exit 1)
	@which $(LIBTOOL) > /dev/null || (echo -e "ERROR: libtool is required. Install with:\n\n    $(POSIX_PKG_MANAGER) install libtool"; exit 1)
	@which ninja > /dev/null || (echo -e "ERROR: Ninja is required. Install with:\n\n    $(POSIX_PKG_MANAGER) install ninja"; exit 1)
	@echo "You have the dependencies installed! Woo"

release-bin-dir:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 854):
	echo $(PACKAGE_DIR)

fmt-all:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1304):
	find src -name "*.zig" -exec $(ZIG) fmt {} \;

boringssl-debug: boringssl-build-debug boringssl-copy
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

test-dev-with-hmr: copy-test-node-modules
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 923):
	-killall bun-debug -9;
	BUN_BIN=$(DEBUG_BUN) node test/scripts/browser.js

bun-relink: bun-relink-copy bun-link-lld-release bun-link-lld-release-dsym
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

release-bin-check: release-bin-check-version release-bin-check-version
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 824):
	@make -B check-glibc-version-dependency

jsc-bindings-headers:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 723):
	rm -f /tmp/build-jsc-headers deps/bindings/headers.zig
	touch deps/bindings/headers.zig
	mkdir -p deps/bindings-obj/
	$(ZIG) build headers-obj
	$(CXX) $(PLATFORM_LINKER_FLAGS) $(JSC_FILES_DEBUG) ${ICU_FLAGS} $(BUN_LLD_FLAGS_WITHOUT_JSC)  -g $(DEBUG_BIN)/headers.o -W -o /tmp/build-jsc-headers -lc;
	/tmp/build-jsc-headers
	$(ZIG) translate-c deps/bindings/headers.h > deps/bindings/headers.zig
	$(BUN_OR_NODE) misctools/headers-cleaner.js
	$(ZIG) fmt deps/bindings/headers.zig

release-bin-generate-zip:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 785):
	cd /tmp/bun-$(PACKAGE_JSON_VERSION)/ && zip -r bun-$(TRIPLET).zip bun-$(TRIPLET)

copy-to-bun-release-dir-dsym:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

jsc-copy-headers:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 939):
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/heap/WeakHandleOwner.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/WeakHandleOwner.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/runtime/LazyClassStructureInlines.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/LazyClassStructureInlines.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/runtime/LazyPropertyInlines.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/LazyPropertyInlines.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/runtime/JSTypedArrayViewPrototype.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JSTypedArrayViewPrototype.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/runtime/JSTypedArrayPrototypes.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JSTypedArrayPrototypes.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JIT.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JIT.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/bytecode/StructureStubInfo.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/StructureStubInfo.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/bytecode/PolymorphicAccess.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/PolymorphicAccess.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/bytecode/AccessCase.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/AccessCase.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/bytecode/ObjectPropertyConditionSet.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/ObjectPropertyConditionSet.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/bytecode/PolyProtoAccessChain.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/PolyProtoAccessChain.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/bytecode/PutKind.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/PutKind.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/bytecode/StructureStubClearingWatchpoint.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/StructureStubClearingWatchpoint.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/bytecode/AdaptiveInferredPropertyValueWatchpointBase.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/AdaptiveInferredPropertyValueWatchpointBase.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/bytecode/StubInfoSummary.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/StubInfoSummary.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/runtime/CommonSlowPaths.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/CommonSlowPaths.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/runtime/DirectArguments.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/DirectArguments.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/runtime/GenericArguments.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/GenericArguments.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/runtime/ScopedArguments.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/ScopedArguments.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/runtime/JSLexicalEnvironment.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JSLexicalEnvironment.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JITDisassembler.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JITDisassembler.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JITInlineCacheGenerator.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JITInlineCacheGenerator.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JITMathIC.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JITMathIC.h
 
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JITAddGenerator.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JITAddGenerator.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JITMathICInlineResult.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JITMathICInlineResult.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/SnippetOperand.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/SnippetOperand.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JITMulGenerator.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JITMulGenerator.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JITNegGenerator.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JITNegGenerator.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JITSubGenerator.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JITSubGenerator.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/bytecode/Repatch.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/Repatch.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JITRightShiftGenerator.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JITRightShiftGenerator.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JITBitBinaryOpGenerator.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JITBitBinaryOpGenerator.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/jit/JSInterfaceJIT.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/JSInterfaceJIT.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/llint/LLIntData.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/LLIntData.h
	cp $(WEBKIT_DIR)/Source/JavaScriptCore/bytecode/FunctionCodeBlock.h $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/FunctionCodeBlock.h
	find $(WEBKIT_RELEASE_DIR)/JavaScriptCore/Headers/JavaScriptCore/ -name "*.h" -exec cp {} $(WEBKIT_RELEASE_DIR)/JavaScriptCore/PrivateHeaders/JavaScriptCore/ \;

fmt-zig:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 618):
	cd src && zig fmt **/*.zig

copy-to-bun-release-dir: copy-to-bun-release-dir-bin copy-to-bun-release-dir-dsym
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

test-bun-install: test-bun-install-git-status
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 899):
	cd test/apps && JS_RUNTIME=$(RELEASE_BUN) NPM_CLIENT=$(RELEASE_BUN) bash ./bun-install.sh
	cd test/apps && BUN_BIN=$(RELEASE_BUN) bash ./bun-install-utf8.sh

all-js: runtime_js fallback_decoder bun_error node-fallbacks
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

release-bin-entitlements:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

vendor: require init-submodules vendor-without-check
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

cls:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 602):
	@echo "\n\n---\n\n"

jsc-build-linux: jsc-build-linux-compile-config jsc-build-linux-compile-build jsc-build-mac-copy
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

analytics-features:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1295):
	@cd misctools; $(ZIG) run --main-pkg-path ../ ./features.zig

release-bin-push-dsym:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

jsc-build-mac-compile-debug:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1028):
	mkdir -p $(WEBKIT_DEBUG_DIR) $(WEBKIT_DIR);
	cd $(WEBKIT_DEBUG_DIR) && \
		ICU_INCLUDE_DIRS="$(HOMEBREW_PREFIX)opt/icu4c/include" \
		cmake \
			-DPORT="JSCOnly" \
			-DENABLE_STATIC_JSC=ON \
			-DCMAKE_BUILD_TYPE=Debug \
			-DUSE_THIN_ARCHIVES=OFF \
			-DENABLE_FTL_JIT=ON \
			-DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
			-G Ninja \
			$(CMAKE_FLAGS_WITHOUT_RELEASE) \
			-DPTHREAD_JIT_PERMISSIONS_API=1 \
			-DUSE_PTHREAD_JIT_PERMISSIONS_API=ON \
			-DENABLE_REMOTE_INSPECTOR=ON \
			-DUSE_VISIBILITY_ATTRIBUTE=1 \
			$(WEBKIT_DIR) \
			$(WEBKIT_DEBUG_DIR) && \
	CFLAGS="$(CFLAGS) -ffat-lto-objects" CXXFLAGS="$(CXXFLAGS) -ffat-lto-objects" \
		cmake --build $(WEBKIT_DEBUG_DIR) --config Debug --target jsc

build-obj-wasm-small:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 554):
	$(ZIG) build bun-wasm -Drelease-small -Dtarget=wasm32-freestanding --prominent-compile-errors
	emcc -sEXPORTED_FUNCTIONS="['_bun_free', '_cycleStart', '_cycleEnd', '_bun_malloc', '_scan', '_transform', '_init']" \
		-g -s ERROR_ON_UNDEFINED_SYMBOLS=0  -DNDEBUG  \
		$(BUN_DEPS_DIR)/libmimalloc.a.wasm  \
		packages/bun-freestanding-wasm32/bun-wasm.o -Oz --no-entry --allow-undefined  -s ASSERTIONS=0  -s ALLOW_MEMORY_GROWTH=1 -s WASM_BIGINT=1  \
		-o packages/bun-freestanding-wasm32/bun-wasm.wasm
	cp packages/bun-freestanding-wasm32/bun-wasm.wasm src/api/demo/public/bun-wasm.wasm

libarchive:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 474):
	cd $(BUN_DEPS_DIR)/libarchive; \
	(make clean || echo ""); \
	(./build/clean.sh || echo ""); \
	./build/autogen.sh; \
	CFLAGS="$(CFLAGS)" CC=$(CC) ./configure --disable-shared --enable-static  --with-pic  --disable-bsdtar   --disable-bsdcat --disable-rpath --enable-posix-regex-lib  --without-xml2  --without-expat --without-openssl  --without-iconv --without-zlib; \
	make -j${CPUS}; \
	cp ./.libs/libarchive.a $(BUN_DEPS_OUT_DIR)/libarchive.a;

jsc-check:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 608):
	@ls $(JSC_BASE_DIR)  >/dev/null 2>&1 || (echo "Failed to access WebKit build. Please compile the WebKit submodule using the Dockerfile at $(shell pwd)/src/javascript/WebKit/Dockerfile and then copy from /output in the Docker container to $(JSC_BASE_DIR). You can override the directory via JSC_BASE_DIR. \n\n 	DOCKER_BUILDKIT=1 docker build -t bun-webkit $(shell pwd)/src/bun.js/WebKit -f $(shell pwd)/src/bun.js/WebKit/Dockerfile --progress=plain\n\n 	docker container create bun-webkit\n\n 	# Get the container ID\n	docker container ls\n\n 	docker cp DOCKER_CONTAINER_ID_YOU_JUST_FOUND:/output $(JSC_BASE_DIR)" && exit 1)	
	@ls $(JSC_INCLUDE_DIR)  >/dev/null 2>&1 || (echo "Failed to access WebKit include directory at $(JSC_INCLUDE_DIR)." && exit 1)	
	@ls $(JSC_LIB)  >/dev/null 2>&1 || (echo "Failed to access WebKit lib directory at $(JSC_LIB)." && exit 1)	

dev-obj:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 857):
	$(ZIG) build obj --prominent-compile-errors

clone-submodules:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 715):
	git -c submodule."src/bun.js/WebKit".update=none submodule update --init --recursive --depth=1 --progress

boringssl: boringssl-build boringssl-copy
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

test-no-hmr: kill-bun copy-test-node-modules
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 919):
	-killall bun -9;
	DISABLE_HMR="DISABLE_HMR" BUN_BIN=$(RELEASE_BUN) node test/scripts/browser.js

# files hash-table stats:
# Load=173/1024=17%, Rehash=0, Collisions=35/377=9%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 195 / storage = 3015 B / avg = 15 B
# current buf: size = 8162 B / used = 3015 B / count = 195 / avg = 15 B

# strcache performance: lookups = 516 / hit rate = 62%
# hash-table stats:
# Load=195/8192=2%, Rehash=0, Collisions=7/516=1%
# Finished Make data base on Sat Jul 16 08:51:22 2022

 
